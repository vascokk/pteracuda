{port_sources, ["c_src/*.cpp"]}.
{so_name, "pteracuda_nifs.so"}.

{port_envs, [{"(linux)", "CXX", "clang++"},
             {"(linux)", "NVCCFLAGS", "-arch=sm_20 -O2 -c -Xcompiler -shared -Xcompiler -fPIC"},
             {"(linux)", "LDFLAGS", "$LDFLAGS c_src/pcuda_ops.o -lcuda -L/usr/local/cuda/lib64 -lcudart -lstdc++"},
             {"(linux)", "CXXFLAGS", "$CXXFLAGS -O2 -I/usr/local/cuda/include"},

			{"win32", "CC", "cl.exe"},
		    {"win32", "CXX", "cl.exe"},
		    {"win32", "LINKER", "link.exe"},
			{"win32", "NVCC", "nvcc.exe"},

		    {"win32", "DRV_CXX_TEMPLATE",
		     "$CXX /c $CXXFLAGS $DRV_CFLAGS $PORT_IN_FILES /Fo$PORT_OUT_FILE"},
		    {"win32", "DRV_CC_TEMPLATE",
		     "$CC /c $CFLAGS $DRV_CFLAGS $PORT_IN_FILES /Fo$PORT_OUT_FILE"},
		    {"win32", "DRV_LINK_TEMPLATE",
		     "$LINKER $PORT_IN_FILES $LDFLAGS $DRV_LDFLAGS /OUT:$PORT_OUT_FILE"},

		    {"win32", "EXE_CXX_TEMPLATE",
		     "$CXX /c $CXXFLAGS $EXE_CFLAGS $PORT_IN_FILES /Fo$PORT_OUT_FILE"},
		    {"win32", "EXE_CC_TEMPLATE",
		     "$CC /c $CFLAGS $EXE_CFLAGS $PORT_IN_FILES /Fo$PORT_OUT_FILE"},
		    {"win32", "EXE_LINK_TEMPLATE",
		     "$LINKER $PORT_IN_FILES $LDFLAGS $EXE_LDFLAGS /OUT:$PORT_OUT_FILE"},

		    %% ERL_CFLAGS are ok as -I even though strictly it should be /I
		    {"win32", "ERL_LDFLAGS", " /LIBPATH:$ERL_EI_LIBDIR erl_interface.lib ei.lib"},
		    {"win32", "DRV_CFLAGS", "/Zi /Wall $ERL_CFLAGS"},
		    {"win32", "DRV_LDFLAGS", "/DLL $ERL_LDFLAGS"},
         
             {"win32", "NVCCFLAGS", "-arch=sm_20 -O2 -c -Xcompiler -shared -Xcompiler -fPIC"},
             {"win32", "CXXFLAGS", "$CXXFLAGS -O2 /I %CUDA_HOME%\\include"},
             {"win32", "LDFLAGS", "$LDFLAGS c_src/pcuda_ops.o /LIBPATH:%CUDA_HOME%\\lib\\Win32 cuda.lib  cudart.lib"}


         ]}.

{port_pre_script, {"make -C c_src", ""}}.
{port_cleanup_script, "make -C c_src clean"}.
